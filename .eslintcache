[{"C:\\Users\\divya\\discussion-forum-frontend\\src\\index.js":"1","C:\\Users\\divya\\discussion-forum-frontend\\src\\App.js":"2","C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\reducer.js":"3","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Layout\\Layout.js":"4","C:\\Users\\divya\\discussion-forum-frontend\\src\\Hoc\\Auxiliary.js":"5","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\Toolbar\\Toolbar.js":"6","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\NavigationItems.js":"7","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js":"8","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Authentication\\Authentication.js":"9","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\UI\\Input\\Input.js":"10","C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\actionTypes.js":"11","C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\index.js":"12","C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\actions.js":"13","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Discussion\\Discussion.js":"14","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\Logout\\Logout.js":"15","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\UpcomingEvents\\UpcomingEvents.js":"16","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\AboutUs\\AboutUs.js":"17","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\AddPost\\AddPost.js":"18","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Posts\\Posts.js":"19","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Post\\Post.js":"20","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\QuestionDiscussion\\QuestionDiscussion.js":"21","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Comment\\Comment.js":"22","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\UI\\Button\\Button.js":"23"},{"size":639,"mtime":1609591376097,"results":"24","hashOfConfig":"25"},{"size":1532,"mtime":1609864091594,"results":"26","hashOfConfig":"25"},{"size":1365,"mtime":1609653034035,"results":"27","hashOfConfig":"25"},{"size":389,"mtime":1609340299796,"results":"28","hashOfConfig":"25"},{"size":60,"mtime":1609339391552,"results":"29","hashOfConfig":"25"},{"size":343,"mtime":1609340686708,"results":"30","hashOfConfig":"25"},{"size":1034,"mtime":1609669930484,"results":"31","hashOfConfig":"25"},{"size":543,"mtime":1609342825743,"results":"32","hashOfConfig":"25"},{"size":5239,"mtime":1609692611927,"results":"33","hashOfConfig":"25"},{"size":611,"mtime":1609582500464,"results":"34","hashOfConfig":"25"},{"size":212,"mtime":1609609233830,"results":"35","hashOfConfig":"25"},{"size":68,"mtime":1609656467168,"results":"36","hashOfConfig":"25"},{"size":3371,"mtime":1609692632446,"results":"37","hashOfConfig":"25"},{"size":2053,"mtime":1609864849957,"results":"38","hashOfConfig":"25"},{"size":328,"mtime":1609865095760,"results":"39","hashOfConfig":"25"},{"size":571,"mtime":1609868385468,"results":"40","hashOfConfig":"25"},{"size":550,"mtime":1609868283272,"results":"41","hashOfConfig":"25"},{"size":2471,"mtime":1609692604250,"results":"42","hashOfConfig":"25"},{"size":1168,"mtime":1609743583577,"results":"43","hashOfConfig":"25"},{"size":1331,"mtime":1609864728430,"results":"44","hashOfConfig":"25"},{"size":4191,"mtime":1609917855914,"results":"45","hashOfConfig":"25"},{"size":692,"mtime":1609766195434,"results":"46","hashOfConfig":"25"},{"size":714,"mtime":1609864820527,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"pr6lrm",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\divya\\discussion-forum-frontend\\src\\index.js",[],["101","102"],"C:\\Users\\divya\\discussion-forum-frontend\\src\\App.js",["103"],"import React , { Component } from 'react';\nimport Layout from './Components/Layout/Layout';\nimport { connect } from 'react-redux';\nimport { Route , Switch} from 'react-router-dom';\nimport Authentication from './Containers/Authentication/Authentication';\nimport Discussion from './Containers/Discussion/Discussion';\nimport UpcomingEvent from './Containers/UpcomingEvents/UpcomingEvents';\nimport AboutUs from './Containers/AboutUs/AboutUs';\nimport AddPost from './Components/AddPost/AddPost';\nimport QuestionDiscussion from './Containers/QuestionDiscussion/QuestionDiscussion';\nimport * as actionCreators from './store/actions/index';\nclass App extends Component {\n\n  componentDidMount() {\n    this.props.defaultLogin();\n  }\n  render(){\n    return (\n      <Layout>\n        <Switch>\n          <Route path=\"/discussion\" exact component={Discussion} />\n          <Route path=\"/upcoming-events\" exact component={UpcomingEvent} />\n          <Route path=\"/question-discussion/:postId\" exact component={QuestionDiscussion} />\n          <Route path=\"/about-us\" exact component={AboutUs} />\n          <Route path=\"/\" exact component={Authentication} />\n        </Switch>\n      </Layout>\n    );\n  };\n};\n\n\nconst mapStateToProps = (state) => {\n  return {\n    isLoggedIn : state.isLoggedIn,\n    token : state.token,\n    userName : state.userName,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    defaultLogin : () => dispatch(actionCreators.defaultLogin()),\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);","C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\reducer.js",["104","105","106","107","108"],"import * as actionTypes from './actions/actionTypes';\n\nconst initialState = {\n    isLoggedIn : false,\n    userId : '',\n    token : '',\n    loading : false,\n    userName : '',\n    error : null,\n};\n\nconst reducer = (state = initialState , action) => {\n\n    switch(action.type) {\n        case actionTypes.AUTH_START : {\n            return {\n                ...state,\n                loading : true,\n                error : null,\n            };\n        };\n        case actionTypes.AUTH_SUCCESS : {\n            return {\n                ...state,\n                loading : false,\n                isLoggedIn : true,\n                userId : action.userId,\n                token : action.token,\n                userName : action.userName,\n                error : null,\n            };\n        };\n        case actionTypes.AUTH_FAIL : {\n            return {\n                ...state,\n                error : action.error.message,\n                loading : false,\n            }\n        };\n        case actionTypes.LOGOUT : {\n            return initialState;\n        };\n        case actionTypes.LOGIN : {\n            return {\n                ...state,\n                isLoggedIn : true,\n                userName : action.userName,\n                userId : action.userId,\n                error : null,\n            }\n        }\n    };\n    return state;\n};\n\n\nexport default reducer;","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Layout\\Layout.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Hoc\\Auxiliary.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\Toolbar\\Toolbar.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\NavigationItems.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\NavigationItem\\NavigationItem.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Authentication\\Authentication.js",["109"],"import React, {useState,useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Aux from '../../Hoc/Auxiliary';\nimport styles from './Authentication.module.css';\nimport Input from '../../Components/UI/Input/Input';\nimport * as actionCreators from '../../store/actions/index';\n\nconst useStyles = makeStyles({\n    root1 : {\n        width : '150px',\n        backgroundColor: 'rgba(44, 61, 85, 1)',\n        fontWeight : 'bold',\n        borderRadius : '6px',\n        '&:hover': {\n            background: 'rgb(59, 27, 199)',\n         }\n    },\n    root2 : {\n        width : '60px',\n        backgroundColor: 'rgba(44, 61, 84, 0)',\n        fontWeight : 'bold',\n        borderRadius : '6px',\n        '&:hover': {\n            background: 'rgb(59, 27, 199)',\n         }\n    }\n})\n\n\nconst Authentication = (props) => {\n    const classes = useStyles();\n    const [formData,setFormData] = useState({\n        email : {\n            label : 'Please enter your Email!',\n            name : 'email',\n            type : 'email',\n            value : '',\n            touched : false,\n            isValid : false,\n            validation : {\n                minLength : 1,\n            }\n        },\n        password : {\n            label : 'Your Password',\n            name : 'password',\n            type : 'password',\n            value : '',\n            touched : false,\n            isValid : false,\n            validation : {\n                minLength : 6,\n            }\n        },\n        name : {\n            label : 'Your Name',\n            name : 'name',\n            type : 'text',\n            value : '',\n            touched : false,\n            isValid : false,\n        }\n    });\n    const [signUp,setSignUp] = useState(true);\n    const [formValid,setFormValid] = useState(false);\n\n\n    useEffect(() => {\n        if(props.isLoggedIn === true){\n            props.history.push('/discussion');\n        }\n    },[props.isLoggedIn]);\n\n    const toggleSignUp =() => {\n        setSignUp(!signUp);\n    };\n    \n\n    const checkValidation = (val,validation) => {\n        if(!validation)\n        return true;\n        let isValid = true;\n        if(validation.minLength){\n            isValid = isValid && val.length >=validation.minLength;\n        };\n        return isValid;\n    }\n\n    const checkCompleteForm = (form) => {\n        let isVal = true;\n        Object.keys(form).forEach(formEle => {\n            isVal = isVal && form[formEle].isValid;\n        });\n        return isVal;\n    }\n\n    const onFormChange = (event,name) => {\n        const newFormData = {...formData};\n        Object.keys(formData).forEach(formElement => {\n            newFormData[formElement] = {...formData[formElement]};\n        });\n        newFormData[name].value = event.target.value;\n        newFormData[name].touched = true;\n        newFormData[name].isValid = checkValidation(event.target.value,newFormData[name].validation);\n        setFormValid(checkCompleteForm(newFormData));\n        setFormData(newFormData);\n    }\n    const onSubmit = () => {\n        props.signIn(formData.email.value,formData.password.value,formData.name.value,signUp);\n    };\n    let loginIn = <p>Already a User? Login <Button className={classes.root2}onClick={toggleSignUp}>here </Button>.</p>\n    let signIn = <p>Visiting for the first time ? Sign Up <Button className={classes.root2} onClick={toggleSignUp}>Here</Button></p>\n    let error = null;\n    if(props.error){\n        let errorMessage = props.error.split('_').join(' ')\n        error = <div className={styles.error}>{errorMessage}</div>\n    }\n    let formUi = (\n        <div className={styles.Authentication}>\n                {Object.keys(formData).map(formElement => (\n                   <Input\n                     key={formElement}\n                     value={formData[formElement].value}\n                     name={formData[formElement].name}\n                     isValid={formData[formElement].isValid}\n                     touched={formData[formElement].touched}\n                     changed={(event,name) => onFormChange(event,name)}\n                     type={formData[formElement].type}\n                     label={formData[formElement].label}\n                    />\n                ))}\n            {signUp ? loginIn : signIn}\n            <Button \n                className={classes.root1}\n                disabled={!formValid}\n                onClick={onSubmit}\n            >\n                {signUp ? <div>Sign Up!</div> : <div>Login In!</div>}\n            </Button>\n        </div>       \n    );\n    if(props.loading){\n        formUi = <div className={styles.spinner}> <CircularProgress /> </div>\n    }\n    return (\n        <Aux>\n            {formUi}\n            {error}\n        </Aux>\n    );\n};\n\n\nconst mapStateToProps = state =>{\n    return {\n        isLoggedIn : state.isLoggedIn,\n        error : state.error,\n        loading : state.loading,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        signIn : (email,password,userName,signUp) => dispatch(actionCreators.auth(email,password,userName,signUp))\n    };\n};\nexport default connect(mapStateToProps,mapDispatchToProps)(Authentication);","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\UI\\Input\\Input.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\actionTypes.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\index.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\store\\actions\\actions.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Discussion\\Discussion.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Navigation\\NavigationItems\\Logout\\Logout.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\UpcomingEvents\\UpcomingEvents.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\AboutUs\\AboutUs.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\AddPost\\AddPost.js",["110"],"import React , { useState, useEffect }from 'react';\nimport axios from 'axios';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CircularProgress  from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Aux from '../../Hoc/Auxiliary';\nimport styles from './AddPost.module.css';\n\nconst useStyles = makeStyles({\n    root : {\n        width : '100px',\n        backgroundColor: 'rgba(44, 61, 85, 1)',\n        fontWeight : 'bold',\n        borderRadius : '6px',\n        '&:hover': {\n            background: 'rgba(44, 61, 85, 1)',\n         }\n    },\n});\n\nconst AddPost = (props) => {\n    const classes = useStyles();\n    const [post,setPost] = useState('');\n    const [loading,setLoading] = useState(false);\n    const onAddClicked = () => {\n        setLoading(true);\n        axios.post('http://localhost:8080/create-post',{\n            userId : props.userId,\n            content : post,\n        }).then(resp => {\n            setLoading(false);\n            props.history.push('/discussion');\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    };\n    const shouldRedirect = () => {\n        let redirect = null;\n        if(!props.isLoggedIn){\n            redirect = <Redirect to='/' />\n        }\n        return redirect;\n    }\n    let addPostContent = (\n        <div className={styles.Content}>\n            <h1>{props.userName} ask a query!</h1>\n            <textarea value={post} onChange={(event) => setPost(event.target.value)} rows=\"5\"></textarea>\n            <Button \n                onClick={onAddClicked}\n                className={classes.root}\n            >\n                    Add\n            </Button>\n        </div>\n    )\n    if(loading){\n        addPostContent = <div \n                    style={{    \n                        display : 'flex',\n                        alignItems: 'center',\n                        justifyContent:'center',\n                        marginTop : '30%'\n                  }}>\n                        <CircularProgress />\n                </div>\n    };\n    return (\n        <Aux>\n            {shouldRedirect()}\n            {addPostContent}\n        </Aux>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn : state.isLoggedIn,\n        userId : state.userId,\n        userName : state.userName,\n    };\n};\n\nexport default connect(mapStateToProps)(AddPost);","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\Posts\\Posts.js",[],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Post\\Post.js",["111","112"],"import React from 'react';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n//import Button from '@material-ui/core/Button';\nimport { withRouter } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport styles from './Post.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Post = (props) => {\n    const { postInfo } = props;\n    const name = postInfo.name.charAt(0).toUpperCase() + postInfo.name.slice(1);\n    const content = postInfo.content;\n    const { userId, postId } = postInfo ;\n\n    const onViewDiscussionClicked = () => {\n        props.history.push(`/question-discussion/${postId}`);\n    }\n    return (\n        <div className={styles.Post}>\n            <div className={styles.SvgStyling}>\n                <AccountCircleIcon color=\"primary\" fontSize=\"inherit\" /> \n                <div className={styles.Name}>\n                    {name}\n                </div>\n            </div>\n            <div className={styles.postContent}>\n                {content}\n            </div>\n            <div className={styles.ButtonWrapper}>\n                <Button \n                    onClick={onViewDiscussionClicked}\n                >\n                    View Discussion\n                </Button>\n            </div>\n        </div>  \n    );\n};\n\n\nexport default withRouter(Post);","C:\\Users\\divya\\discussion-forum-frontend\\src\\Containers\\QuestionDiscussion\\QuestionDiscussion.js",["113","114"],"C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\Comment\\Comment.js",["115","116"],"import React from 'react';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport styles from './Comment.module.css';\nconst Comment = ({commentInfo}) => {\n    const {name , userId, commentId , content} = commentInfo;\n    let userName = name.charAt(0).toUpperCase() + name.slice(1);\n    return (\n        <div style={{margin : '10px'}}>\n            <div className={styles.Header}>\n                <AccountCircleIcon />\n                <div className={styles.Name}>\n                    {userName}\n                </div>\n            </div>\n            <div style={{margin : '10px'}}>\n                {content}\n            </div>\n        </div>\n    )\n};\n\n\nexport default Comment;","C:\\Users\\divya\\discussion-forum-frontend\\src\\Components\\UI\\Button\\Button.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":14,"column":5,"nodeType":"127","messageId":"128","endLine":52,"endColumn":6},{"ruleId":"129","severity":1,"message":"130","line":15,"column":39,"nodeType":"131","messageId":"132","endLine":21,"endColumn":10},{"ruleId":"129","severity":1,"message":"130","line":22,"column":41,"nodeType":"131","messageId":"132","endLine":32,"endColumn":10},{"ruleId":"129","severity":1,"message":"130","line":33,"column":38,"nodeType":"131","messageId":"132","endLine":39,"endColumn":10},{"ruleId":"129","severity":1,"message":"130","line":40,"column":35,"nodeType":"131","messageId":"132","endLine":42,"endColumn":10},{"ruleId":"133","severity":1,"message":"134","line":74,"column":7,"nodeType":"135","endLine":74,"endColumn":25,"suggestions":"136"},{"ruleId":"121","severity":1,"message":"137","line":1,"column":28,"nodeType":"123","messageId":"124","endLine":1,"endColumn":37},{"ruleId":"121","severity":1,"message":"138","line":5,"column":10,"nodeType":"123","messageId":"124","endLine":5,"endColumn":20},{"ruleId":"121","severity":1,"message":"139","line":13,"column":13,"nodeType":"123","messageId":"124","endLine":13,"endColumn":19},{"ruleId":"121","severity":1,"message":"140","line":28,"column":11,"nodeType":"123","messageId":"124","endLine":28,"endColumn":18},{"ruleId":"133","severity":1,"message":"141","line":40,"column":7,"nodeType":"135","endLine":40,"endColumn":17,"suggestions":"142"},{"ruleId":"121","severity":1,"message":"139","line":5,"column":19,"nodeType":"123","messageId":"124","endLine":5,"endColumn":25},{"ruleId":"121","severity":1,"message":"143","line":5,"column":27,"nodeType":"123","messageId":"124","endLine":5,"endColumn":36},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'AddPost' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["146"],"'useEffect' is defined but never used.","'makeStyles' is defined but never used.","'userId' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.match.params.postId'. Either include it or remove the dependency array.",["147"],"'commentId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [props.history, props.isLoggedIn]",{"range":"152","text":"153"},"Update the dependencies array to be: [fetchNow, props.match.params.postId]",{"range":"154","text":"155"},[2019,2037],"[props.history, props.isLoggedIn]",[1378,1388],"[fetchNow, props.match.params.postId]"]